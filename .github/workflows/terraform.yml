name: Terraform Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        with:
            aws-access-key-id: $AWS_ACCESS_KEY_ID
            aws-secret-access-key: $AWS_SECRET_ACCESS_KEY
            aws-session-token: $AWS_SESSION_TOKEN
            aws-region: ap-northeast-2
          

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      # Terraform destroy 실행 (배포 성공 여부와 상관없이 항상 실행)
      - name: Cleanup on Failure
        if: failure()
        run: terraform destroy -auto-approve

  prowler-scan:
    runs-on: ubuntu-latest
    needs: deploy  # deploy 작업이 완료된 후에만 실행
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install and Run Prowler
        run: |
          git clone https://github.com/prowler-cloud/prowler.git
          cd prowler
          chmod +x prowler  # 실행 권한 부여
          ./prowler -M html > prowler-report.html  # Prowler 검사 실행

      - name: Upload Prowler Report
        uses: actions/upload-artifact@v3
        with:
          name: prowler-report
          path: prowler/prowler-report.html
          